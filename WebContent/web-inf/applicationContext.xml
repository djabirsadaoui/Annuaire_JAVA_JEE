<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">



	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:8888/codel" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="mappingResources">
			<list>
				<value>Model/Adresse.hbm.xml</value>
				<value>Model/Contact.hbm.xml</value>
				<value>Model/PhoneNumber.hbm.xml</value>
				<value>Model/ContactGroup.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
				</prop>

			</props>
		</property>
	</bean>
	

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>
	<tx:advice id="daoTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" timeout="-1" />
			<tx:method name="sav*" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" timeout="4" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="execution(* DAO.DaoContact.*(..))"
			advice-ref="daoTxAdvice" />

	</aop:config>
	<tx:advice id="serviceTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" timeout="-1" />
			<tx:method name="sav*" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" timeout="1" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="execution(* service.ServiceImp.*(..))"
			advice-ref="serviceTxAdvice" />
	</aop:config>


	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>

	<bean id="DaoContact" class="DAO.DaoContact">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<bean id="beanService" class="service.ServiceImp" />

	<bean id="beanContact" class="Model.Contact" scope="prototype">
		<property name="address" ref="beanAdresse" />
		<property name="profiles">
			<set>
				<ref bean="beanPhone" />
			</set>
		</property>
		<property name="books">
			<set>
				<ref bean="beanGroup" />
			</set>
		</property>


	</bean>
	<bean id="beanEntreprise" parent="beanContact" class="Model.Entreprise">

	</bean>

	<bean id="beanAdresse" class="Model.Adresse" scope="prototype" />

	<bean id="beanPhone" class="Model.PhoneNumber" scope="prototype" />

	<bean id="beanGroup" class="Model.ContactGroup" scope="prototype">

	</bean>

</beans>
